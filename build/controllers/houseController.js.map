{"version":3,"sources":["../../server/controllers/houseController.js"],"names":["houseController","post","req","res","decoded","house","House","creator","votes","push","vote","save","then","status","json","success","data","newHouse","catch","message","err","getAll","find","houses","getOne","id","params","findById","error","submitVote","body","findByIdAndUpdate","_id"],"mappings":"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","file":"houseController.js","sourcesContent":["import db from '../models';\nexport const houseController = {};\n\nhouseController.post = (req, res) => {\n    const { decoded } = req;\n    const house = new db.House();\n    house.creator = decoded;\n    house.votes.push({ vote: 1, creator: decoded });\n    house.save().then( newHouse => {\n        return res.status(200).json({\n            success: true,\n            data: newHouse\n        })\n    }).catch( err => {\n        return res.status(500).json({\n            message: err\n        })\n    })\n};\n\nhouseController.getAll = (req, res) => {\n    db.House.find({})\n        .then( houses => {\n            return res.status(200).json({\n                success: true,\n                data: houses\n            });\n        }).catch( err => {\n            return res.status(500).json({\n                message: err\n            });\n    });\n};\n\nhouseController.getOne = (req, res) => {\n    const { id } = req.params;\n    db.House.findById(id)\n        .then( house => {\n            if(house === null) {\n                return res.status(404).json({\n                    success: false,\n                    error: `Not Found: No house with id: '${id}'`\n                })\n            }\n            return res.status(200).json({\n                success: true,\n                data: house\n            });\n        }).catch( err => {\n        return res.status(500).json({\n            message: err\n        });\n    });\n};\n\nhouseController.submitVote = (req, res) => {\n    const { params: { id }, body, decoded } = req;\n    db.House.findByIdAndUpdate({_id: id},\n        { \"$push\": { votes: { ...body, creator: decoded }} },\n        (error, data) => {\n            if(error) {\n                return res.status(500).json({\n                    success: false,\n                    error\n                });\n            }\n            if(body.vote !== 1 || body.vote !== 1) {\n                return res.status(422).json({\n                    success: false,\n                    error: 'Invalid Data: vote must be 1 or -1 only.'\n                });\n            }\n            if(data === null){\n                return res.status(404).json({\n                    success: false,\n                    error: `House with id: '${id}' not found.`\n                });\n            }\n            return res.status(200).json({\n                success: true,\n                data\n            })\n    })\n};\n\nexport default houseController;"]}