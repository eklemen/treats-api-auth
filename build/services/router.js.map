{"version":3,"sources":["../../server/services/router.js"],"names":["router","Router","ExtractJwt","require","requireAuth","authenticate","session","requireLogin","protectedRoute","req","res","next","send","route","get","post","signup","signin","logout","getUsers","use","authToken","fromHeader","decoded","decode","secret","sub","status","success","message","getAll","getOne","put","submitVote"],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AALA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAGA,IAAMC,aAAaC,QAAQ,cAAR,EAAwBD,UAA3C;;;AAIA,IAAME,cAAc,mBAASC,YAAT,CAAsB,KAAtB,EAA6B,EAACC,SAAS,KAAV,EAA7B,CAApB;AACA,IAAMC,eAAe,mBAASF,YAAT,CAAsB,OAAtB,EAA+B,EAACC,SAAS,KAAV,EAA/B,CAArB;;AAEA,SAASE,cAAT,CAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,IAAlC,EAAwC;AACpCD,QAAIE,IAAJ,CAAS,kBAAT;AACH;AACDZ,OAAOa,KAAP,CAAa,YAAb,EACKC,GADL,CACSV,WADT,EACsBI,cADtB;AAEA;AACA;AACAR,OAAOa,KAAP,CAAa,SAAb,EACKE,IADL,CACU,0BAAeC,MADzB;AAEAhB,OAAOa,KAAP,CAAa,SAAb,EACKE,IADL,CACU,CAACR,YAAD,EAAe,0BAAeU,MAA9B,CADV;AAEAjB,OAAOc,GAAP,CAAW,SAAX,EAAsB,0BAAeI,MAArC;;AAEA;AACA;AACAlB,OAAOc,GAAP,CAAW,QAAX,EAAqB,0BAAeK,QAApC;;AAEA;AACAnB,OAAOoB,GAAP,CAAW,UAASX,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAChC,QAAMU,YAAYnB,WAAWoB,UAAX,CAAsB,eAAtB,EAAuCb,GAAvC,CAAlB;AACA,QAAMc,UAAU,oBAAIC,MAAJ,CAAWH,SAAX,EAAsB,iBAAOI,MAA7B,CAAhB;AACA,QAAGF,OAAH,EAAY;AACRd,YAAIc,OAAJ,GAAcA,QAAQG,GAAtB;AACAf;AACH,KAHD,MAGO;AACH,eAAOD,IAAIiB,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqB;AACxBgB,qBAAS,KADe;AAExBC,qBAAS;AAFe,SAArB,CAAP;AAIH;AACJ,CAZD;AAaA;;AAEA;AACA;AACA;AACA7B,OAAOa,KAAP,CAAa,SAAb,EACKE,IADL,CACUX,WADV,EACuB,0BAAgBW,IADvC;AAEAf,OAAOc,GAAP,CAAW,SAAX,EAAsB,0BAAgBgB,MAAtC;AACA9B,OAAOc,GAAP,CAAW,aAAX,EAA0B,0BAAgBiB,MAA1C;;AAEA;AACA;AACA/B,OAAOa,KAAP,CAAa,kBAAb,EACKmB,GADL,CACS5B,WADT,EACsB,0BAAgB6B,UADtC;;kBAMejC,M","file":"router.js","sourcesContent":["import passport from 'passport';\nimport express from 'express';\nconst router = express.Router();\nimport authController from '../controllers/auth_controller';\nimport houseController from '../controllers/houseController';\nconst ExtractJwt = require('passport-jwt').ExtractJwt;\nimport jwt from 'jwt-simple';\nimport config from '../config';\n\nconst requireAuth = passport.authenticate('jwt', {session: false});\nconst requireLogin = passport.authenticate('local', {session: false});\n\nfunction protectedRoute(req, res, next) {\n    res.send('Heres the secret');\n}\nrouter.route('/protected')\n    .get(requireAuth, protectedRoute);\n// ---------------------------------------------------------\n// Auth Routes\nrouter.route('/signup')\n    .post(authController.signup);\nrouter.route('/signin')\n    .post([requireLogin, authController.signin]);\nrouter.get('/logout', authController.logout);\n\n// ---------------------------------------------------------\n// User routes\nrouter.get('/users', authController.getUsers);\n\n// TODO: move this out _________________________________________\nrouter.use(function(req, res, next) {\n    const authToken = ExtractJwt.fromHeader('authorization')(req);\n    const decoded = jwt.decode(authToken, config.secret);\n    if(decoded) {\n        req.decoded = decoded.sub;\n        next()\n    } else {\n        return res.status(403).send({\n            success: false,\n            message: 'No token provided.'\n        });\n    }\n});\n// __________________________________________________________\n\n// ---------------------------------------------------------\n// House routes\n// router.post('/houses', houseController.post);\nrouter.route('/houses')\n    .post(requireAuth, houseController.post);\nrouter.get('/houses', houseController.getAll);\nrouter.get('/houses/:id', houseController.getOne);\n\n// ---------------------------------------------------------\n// Vote routes\nrouter.route('/houses/:id/vote')\n    .put(requireAuth, houseController.submitVote);\n\n\n\n\nexport default router;\n"]}